@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}
      <div class="card card-custom">
          <div class="card-header">
              <div class="card-title">
                  <h3 class="card-label">
                      آیا از حذف این مقاله اطمینان دارید؟
                      @*<small>sub title</small>*@
                  </h3>
              </div>
          </div>
          <div class="card-body">
              <dl class="row">
                  @{
                      Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
                      Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

                      foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
                      {
                          if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                              && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
                          {
                              <dt class="col-sm-2">
                                  @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                              </dt>
                              <dd class="col-sm-10">
                                  @@Html.DisplayFor(model => model.@GetValueExpression(property))
                              </dd>
                          }
                          else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
                          {
                              <dt class="col-sm-2">
                                  @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))
                              </dt>
                              <dd class="col-sm-10">
                                  @@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                              </dd>
                          }
                      }
                  @:</dl>
                  @:<div class="card-footer">
                      @:<form asp-action="Delete">
                          foreach (var property in Model.ModelMetadata.Properties)
                          {
                              if (property.IsPrimaryKey)
                              {
                                  @:<input type="hidden" asp-for="@GetValueExpression(property)" />
                              }
                          }
                          @:<input type="submit" value="Delete" class="btn btn-danger mr-2" />
                          @:<a asp-action="Index" class="btn btn-secondary">Cancel</a>
                      @:</form>
                  @:</div>
              @:</div>
          @:</div>
              if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
              {
                  //ClearIndent();
                  @:
@:</body>
@:</html>
    }
}
@functions
{
    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}
